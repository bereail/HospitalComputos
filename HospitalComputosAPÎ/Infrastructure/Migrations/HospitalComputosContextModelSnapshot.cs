// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using computosApp.Models.DB;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(HospitalComputosContext))]
    partial class HospitalComputosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("computosApp.Models.DB.Computadora", b =>
                {
                    b.Property<int>("IdComputadora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComputadora"), 1L, 1);

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("IP");

                    b.Property<string>("NombrePc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NombrePC");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdComputadora")
                        .HasName("PK__Computad__1102CC84094D511E");

                    b.HasIndex("IdServicio");

                    b.ToTable("Computadoras");
                });

            modelBuilder.Entity("computosApp.Models.DB.EntregaToner", b =>
                {
                    b.Property<int>("IdEntregaToner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntregaToner"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdToner")
                        .HasColumnType("int");

                    b.HasKey("IdEntregaToner")
                        .HasName("PK__EntregaT__D2D3856D62C9E55F");

                    b.HasIndex("IdServicio");

                    b.HasIndex("IdToner");

                    b.ToTable("EntregaToner", (string)null);
                });

            modelBuilder.Entity("computosApp.Models.DB.Impresora", b =>
                {
                    b.Property<int>("IdImpresora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImpresora"), 1L, 1);

                    b.Property<int?>("IdComputadora")
                        .HasColumnType("int");

                    b.Property<int?>("IdToner")
                        .HasColumnType("int");

                    b.Property<string>("NombreImpresora")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdImpresora")
                        .HasName("PK__Impresor__627CBB0C44EB7FF2");

                    b.HasIndex("IdComputadora");

                    b.HasIndex("IdToner");

                    b.ToTable("Impresoras");
                });

            modelBuilder.Entity("computosApp.Models.DB.Reparacione", b =>
                {
                    b.Property<int>("IdReparacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReparacion"), 1L, 1);

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdComputadora")
                        .HasColumnType("int");

                    b.HasKey("IdReparacion")
                        .HasName("PK__Reparaci__DCF37F00CECD80DF");

                    b.HasIndex("IdComputadora");

                    b.ToTable("Reparaciones");
                });

            modelBuilder.Entity("computosApp.Models.DB.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"), 1L, 1);

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdServicio")
                        .HasName("PK__Servicio__2DCCF9A2EBB6A747");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("computosApp.Models.DB.Toner", b =>
                {
                    b.Property<int>("IdToner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdToner"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdToner")
                        .HasName("PK__Toner__D6F13E8168B03651");

                    b.ToTable("Toner", (string)null);
                });

            modelBuilder.Entity("computosApp.Models.DB.Computadora", b =>
                {
                    b.HasOne("computosApp.Models.DB.Servicio", "IdServicioNavigation")
                        .WithMany("Computadoras")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Computado__IdSer__693CA210");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("computosApp.Models.DB.EntregaToner", b =>
                {
                    b.HasOne("computosApp.Models.DB.Servicio", "IdServicioNavigation")
                        .WithMany("EntregaToners")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("FK__EntregaTo__IdSer__6EF57B66");

                    b.HasOne("computosApp.Models.DB.Toner", "IdTonerNavigation")
                        .WithMany("EntregaToners")
                        .HasForeignKey("IdToner")
                        .IsRequired()
                        .HasConstraintName("FK__EntregaTo__IdTon__6E01572D");

                    b.Navigation("IdServicioNavigation");

                    b.Navigation("IdTonerNavigation");
                });

            modelBuilder.Entity("computosApp.Models.DB.Impresora", b =>
                {
                    b.HasOne("computosApp.Models.DB.Computadora", "IdComputadoraNavigation")
                        .WithMany("Impresoras")
                        .HasForeignKey("IdComputadora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Impresora__IdCom__71D1E811");

                    b.HasOne("computosApp.Models.DB.Toner", "IdTonerNavigation")
                        .WithMany("Impresoras")
                        .HasForeignKey("IdToner")
                        .HasConstraintName("FK__Impresora__IdTon__72C60C4A");

                    b.Navigation("IdComputadoraNavigation");

                    b.Navigation("IdTonerNavigation");
                });

            modelBuilder.Entity("computosApp.Models.DB.Reparacione", b =>
                {
                    b.HasOne("computosApp.Models.DB.Computadora", "IdComputadoraNavigation")
                        .WithMany("Reparaciones")
                        .HasForeignKey("IdComputadora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Reparacio__IdCom__75A278F5");

                    b.Navigation("IdComputadoraNavigation");
                });

            modelBuilder.Entity("computosApp.Models.DB.Computadora", b =>
                {
                    b.Navigation("Impresoras");

                    b.Navigation("Reparaciones");
                });

            modelBuilder.Entity("computosApp.Models.DB.Servicio", b =>
                {
                    b.Navigation("Computadoras");

                    b.Navigation("EntregaToners");
                });

            modelBuilder.Entity("computosApp.Models.DB.Toner", b =>
                {
                    b.Navigation("EntregaToners");

                    b.Navigation("Impresoras");
                });
#pragma warning restore 612, 618
        }
    }
}
